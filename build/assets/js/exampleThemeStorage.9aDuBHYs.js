var g=(e=>(e.Local="local",e.Sync="sync",e.Managed="managed",e.Session="session",e))(g||{});async function u(e,o){function s(n){return typeof n=="function"}function r(n){return n instanceof Promise}return s(e)?r(e)?await e(o):e(o):e}let h=!1;function m(e){if(chrome.storage[e]===void 0)throw new Error(`Check your storage permission in manifest.json: ${e} is not defined`)}function C(e,o,s){let r=null,n=[];const a=(s==null?void 0:s.storageType)??"local",S=(s==null?void 0:s.liveUpdate)??!1;h===!1&&a==="session"&&(s==null?void 0:s.sessionAccessForContentScripts)===!0&&(m(a),chrome.storage[a].setAccessLevel({accessLevel:"TRUSTED_AND_UNTRUSTED_CONTEXTS"}),h=!0);const l=async()=>(m(a),(await chrome.storage[a].get([e]))[e]??o),i=()=>{n.forEach(t=>t())},f=async t=>{r=await u(t,r),await chrome.storage[a].set({[e]:r}),i()},w=t=>(n=[...n,t],()=>{n=n.filter(c=>c!==t)}),v=()=>r;l().then(t=>{r=t,i()});async function p(t){if(t[e]===void 0)return;const c=t[e].newValue;r!==c&&(r=await u(c,r),i())}return S&&chrome.storage[a].onChanged.addListener(p),{get:l,set:f,getSnapshot:v,subscribe:w}}const d=C("theme-storage-key","light",{storageType:g.Local,liveUpdate:!0}),L={...d,toggle:async()=>{await d.set(e=>e==="light"?"dark":"light")}};export{L as e};
